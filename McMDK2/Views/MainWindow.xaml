<Controls:MetroWindow x:Class="McMDK2.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                      xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                      xmlns:v="clr-namespace:McMDK2.Views"
                      xmlns:vd="clr-namespace:McMDK2.Views.Dialogs"
                      xmlns:vm="clr-namespace:McMDK2.ViewModels"
                      xmlns:vmd="clr-namespace:McMDK2.ViewModels.Dialogs"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:Data="clr-namespace:McMDK2.Core.Data;assembly=McMDK2.Core"
                      xmlns:Converter="clr-namespace:McMDK2.Core.Converter;assembly=McMDK2.Core"
                      xmlns:Behaviors="clr-namespace:McMDK2.Core.Behaviors;assembly=McMDK2.Core"
                      xmlns:system="clr-namespace:System;assembly=mscorlib"
                      Title="{Binding Title}"
                      Height="820" Width="1350"
                      TitleCaps="False"
                      TextOptions.TextFormattingMode="Display"
                      RenderOptions.ClearTypeHint="Enabled"
                      GlowBrush="{DynamicResource WindowGlowBrush}"
                      NonActiveWindowTitleBrush="{DynamicResource WindowTitleColorBrush}">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    
    <i:Interaction.Behaviors>
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Uninitialize" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        <l:InteractionMessageTrigger MessageKey="Transition" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Converter:ItemTypeToBitmapConverter x:Key="ItemTypeToBitmapConverter" />
            <Converter:FilePathToBooleanConverter x:Key="FilePathToBooleanConverter" />
            <FontFamily x:Key="HeaderFontFamily">Meiryo UI</FontFamily>
            <system:Double x:Key="WindowTitleFontSize">15</system:Double>
        </ResourceDictionary>
    </Window.Resources>
    
    <!-- Keyborad Bindings -->
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="{Binding NewWizardCommand}"/>
        <KeyBinding Key="T" Modifiers="Control" />
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenProjectCommand}"/>
    </Window.InputBindings>

    <DockPanel>
        <Menu DockPanel.Dock="Top"
              SnapsToDevicePixels="True">
            <MenuItem Header="ファイル(_F)" TextOptions.TextFormattingMode="Display">
                <MenuItem Header="新規作成(_N)" TextOptions.TextFormattingMode="Display">
                    <MenuItem Header="新規作成ウィザード(_N)" TextOptions.TextFormattingMode="Display"
                              InputGestureText="Ctrl+N"
                              Command="{Binding NewWizardCommand}"/>
                </MenuItem>
                <MenuItem Header="開く(_O)" TextOptions.TextFormattingMode="Display"
                          InputGestureText="Ctrl+O"
                          Command="{Binding OpenProjectCommand}"/>
                <Separator />
                <MenuItem Header="閉じる(_C)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding CloseTabCommand}"/>
                <MenuItem Header="プロジェクトを閉じる(_T)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding CloseProjectCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Close_16xLG.png" Height="15px" Width="15px" UseLayoutRounding="True"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="プロジェクトを保存(_S)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding SaveProjectCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/save_16xLG.png" Height="15px" Width="15px" UseLayoutRounding="True" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="終了(_E)" TextOptions.TextFormattingMode="Display"
                          Command="{Binding CloseAppCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Close_16xLG.png" Height="15px" Width="15px" UseLayoutRounding="True"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="編集(_E)" TextOptions.TextFormattingMode="Display">
                <MenuItem Header="切り取り(_T)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding CutItemCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Cut_6523.png" Height="15px" Width="15px" UseLayoutRounding="True"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="コピー(_C)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding CopyItemCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Copy_6524.png" Height="15px" Width="15px" UseLayoutRounding="True" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="貼り付け(_P)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding PasteItemCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Paste_6520.png" Height="15px" Width="15px" UseLayoutRounding="True" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="削除(_D)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding DeleteItemCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/action_Cancel_16xLG.png" Height="15px" Width="15px" UseLayoutRounding="True" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="表示(_V)" TextOptions.TextFormattingMode="Display">
                <MenuItem Header="デザイナー(_D)" TextOptions.TextFormattingMode="Display" 
                          IsEnabled="{Binding IsLoadedProject}"/>
                <MenuItem Header="ソースコード(_S)" TextOptions.TextFormattingMode="Display" 
                          IsEnabled="{Binding IsLoadedProject}"/>
                <MenuItem Header="MDFファイル(_M)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"/>
            </MenuItem>
            <MenuItem Header="プロジェクト(_P)" TextOptions.TextFormattingMode="Display">
                <MenuItem Header="新しいアイテムを追加(_N)" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding AddNewItemCommand}"/>
                <Separator />
                <MenuItem Header="プロジェクト情報" TextOptions.TextFormattingMode="Display"
                          IsEnabled="{Binding IsLoadedProject}"
                          Command="{Binding ProjectInfoCommand}"/>
            </MenuItem>
            <MenuItem Header="ツール(_T)" TextOptions.TextFormattingMode="Display">
                <MenuItem Header="オプション" TextOptions.TextFormattingMode="Display"/>
                <Separator />
                <MenuItem Header="Minecraft" />
                <MenuItem Header="Minecraft Server" />
                <MenuItem Header="Bukkit Server" />
            </MenuItem>
            <MenuItem Header="ヘルプ(_H)" TextOptions.TextFormattingMode="Display">
                <MenuItem Header="McMDKについて" TextOptions.TextFormattingMode="Display"
                          Command="{Binding ShowAboutDialogCommand}"/>
            </MenuItem>
        </Menu>

        <ToolBar DockPanel.Dock="Top">
            <ToolBar.Resources>
                <SolidColorBrush x:Key="GrayBrush7" Color="#3E3E40"/>
            </ToolBar.Resources>
            <Button ToolTip="保存">
                <Image Source="/Resources/save_16xLG.png" Height="15px" Width="15px" UseLayoutRounding="True" />
            </Button>
            <Button ToolTip="全てを保存">
                <Image Source="/Resources/Saveall_6518.png" Height="15px" Width="15px" UseLayoutRounding="True" />
            </Button>
            <Separator />
            <Button ToolTip="実行">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Resources/arrow_run_16xLG.png" Height="15px" Width="15px" UseLayoutRounding="True" />
                    <TextBlock Text="実行" TextOptions.TextFormattingMode="Display"
                               Margin="2,0,0,0" />
                </StackPanel>
            </Button>
            <ComboBox ToolTip="実行構成"
                      Margin="5,0,0,0" Width="100"
                      BorderBrush="{StaticResource BackgroundNormal}"
                      Foreground="{StaticResource BlackColorBrush}">
                <ComboBoxItem IsSelected="True">クライアント</ComboBoxItem>
                <ComboBoxItem>サーバー</ComboBoxItem>
                <ComboBoxItem>構成設定...</ComboBoxItem>
            </ComboBox>
        </ToolBar>

        <StatusBar DockPanel.Dock="Bottom" 
                   Background="{DynamicResource WindowGlowBrush}"
                   Height="22">
            <TextBlock Text="{Binding TaskText}" />
        </StatusBar>

        <Grid Margin="10,0,0,0">
            <Grid.ColumnDefinitions>
                <!-- Default Size -->
                <ColumnDefinition Width="970*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="370"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <TabControl Margin="0,10,0,0" 
                            ItemsSource="{Binding Tabs}"
                            SelectedIndex="{Binding SelectedTabIndex}"/>
            </Grid>

            <GridSplitter Grid.Column="1" Width="4"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Center"
                          Background="{DynamicResource BackgroundNormal}"
                          ResizeBehavior="PreviousAndNext"/>

            <Grid Grid.Column="2">
                <GroupBox Header="プロジェクト エクスプローラー" 
                          Background="{DynamicResource WindowGlowBrush}"
                          BorderBrush="{DynamicResource WindowTitleForeground}">
                    <TreeView ItemsSource="{Binding CurrentProject.Items, Mode=TwoWay}">
                        <i:Interaction.Behaviors>
                            <Behaviors:SelectedItemBindBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                        </i:Interaction.Behaviors>
                        <TreeView.Resources>
                            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MetroContextMenu}">
                                <Style.Resources>
                                    <SolidColorBrush x:Key="MenuItemSelectionFill" Color="#54545C" />
                                </Style.Resources>
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                            </Style>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>
                            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource MetroTreeView}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLoadedProject}" Value="True">
                                        <Setter Property="ContextMenu">
                                            <Setter.Value>
                                                <ContextMenu ItemsSource="{Binding ProjectContextMenuItems}">
                                                    <ContextMenu.Resources>
                                                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                                            <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                                                            <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}" />
                                                            <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                                            <Setter Property="FontSize" Value="12" />
                                                        </Style>
                                                        <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MetroContextMenu}">
                                                            <Style.Resources>
                                                                <SolidColorBrush x:Key="MenuItemSelectionFill" Color="#54545C" />
                                                            </Style.Resources>
                                                            <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                                        </Style>
                                                    </ContextMenu.Resources>
                                                </ContextMenu>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                                <!-- Select Item and Opening Viewer -->
                                <Setter Property="Behaviors:MouseDoubleClickBehavior.Command" Value="{Binding DataContext.MouseDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type Controls:MetroWindow}}}" />
                                <Setter Property="Behaviors:MouseDoubleClickBehavior.CommandParameter" Value="{Binding}" />
                                <Setter Property="Behaviors:EventHandleBehavior.Command" Value="{Binding DataContext.PreviewMouseRightButtonDownCommand, RelativeSource={RelativeSource AncestorType={x:Type Controls:MetroWindow}}}" />
                                <Setter Property="Behaviors:EventHandleBehavior.EventName" Value="PreviewMouseRightButtonDown" />
                             </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="Data:ProjectItem" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal" x:Name="ITEM_LAYER">
                                    <Grid>
                                        <Image x:Name="ITEM_ICON" Source="{Binding FileType, Converter={StaticResource ItemTypeToBitmapConverter}}"
                                               Height="15" Width="15"
                                               UseLayoutRounding="True"/>
                                        <Image x:Name="ITEM_ANNOTATION_ICON"
                                               Height="15" Width="15"
                                               UseLayoutRounding="True"
                                               Visibility="Collapsed"/>
                                    </Grid>
                                    <TextBlock Padding="5,0,0,0" Text="{Binding Name}" />
                                </StackPanel>
                                <HierarchicalDataTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                            <Condition Binding="{Binding FileType}" Value="DIRECTORY" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ITEM_ICON" Property="Source" Value="/Resources/Folder_6221.png" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding IsCut}" Value="True">
                                        <Setter TargetName="ITEM_LAYER" Property="Opacity" Value="0.5"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsCut}" Value="False">
                                        <Setter TargetName="ITEM_LAYER" Property="Opacity" Value="1.0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FilePath, Converter={StaticResource FilePathToBooleanConverter}}" Value="False">
                                        <Setter TargetName="ITEM_ANNOTATION_ICON" Property="Source" Value="/Resources/Notondisk_7245.png" />
                                        <Setter TargetName="ITEM_ANNOTATION_ICON" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </HierarchicalDataTemplate.Triggers>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</Controls:MetroWindow>
